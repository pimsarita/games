pip install kivy
# main.py
from kivy.app import App
from kivy.uix.widget import Widget
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.clock import Clock
from random import randint

class ShooterGame(Widget):
    def __init__(self, **kwargs):
        super(ShooterGame, self).__init__(**kwargs)
        self.score = 0

        # Create shooter (player) image
        self.shooter = Image(source='shooter.png', pos=(300, 100), size=(100, 100)) // change image size //
        self.add_widget(self.shooter)

        # Schedule enemy creation
        Clock.schedule_interval(self.create_enemy, 1.0)

    def create_enemy(self, dt):
        # Create enemy image at a random position
        enemy = Image(source='enemy.png', pos=(randint(0, 600), 500), size=(50, 50))
        self.add_widget(enemy)

    def on_touch_down(self, touch):
        # Check if touch is on the shooter
        if self.shooter.collide_point(*touch.pos):
            self.score += 1
            print(f"Score: {self.score}")

    def update(self, dt):
        # Move enemies downwards
        for child in self.children:
            if isinstance(child, Image) and child.source == 'enemy.png':
                child.y -= 5

                # Check for collisions with shooter
                if child.collide_widget(self.shooter):
                    print("Game Over!")
                    App.get_running_app().stop()

                # Check if enemy is out of the screen
                if child.y < 0:
                    self.remove_widget(child)

class ShooterApp(App):
    def build(self):
        game = ShooterGame()
        Clock.schedule_interval(game.update, 1.0 / 60.0)  # Update at 60 FPS
        return game

if __name__ == '__main__':
    ShooterApp().run()
